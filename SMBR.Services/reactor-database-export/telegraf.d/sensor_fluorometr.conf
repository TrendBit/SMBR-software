[[inputs.http]]
    urls = ["http://localhost:8089/sensor/fluorometer/ojip/read_last"]
    interval = "30s"
    method = "GET"
    name_override = "sensor/fluorometer/ojip"
    data_format = "json_v2"
    [[inputs.http.json_v2]]
        [[inputs.http.json_v2.object]]
            path = "samples"
        [[inputs.http.json_v2.tag]]
            path = "detector_gain"
        [[inputs.http.json_v2.tag]]
            path = "read"
        [[inputs.http.json_v2.tag]]
            path = "saturated"
        [[inputs.http.json_v2.tag]]
            path = "timebase"
        [[inputs.http.json_v2.tag]]
            path = "measurement_id"
        [[inputs.http.json_v2.tag]]
            path = "emitor_intensity"

        # Filter measurements which was already read based on flag in json data
        [[processors.converter]]
            [processors.converter.fields]
                string = ["read"]
            [[processors.filter]]
                namepass = ["sensor/fluorometer/ojip"]
                default = "pass"
                [[processors.filter.rule]]
                    tags = {"read" = ["true"]}
                    action = "drop"

[[inputs.http]]
    urls = ["http://localhost:8089/sensor/fluorometer/emitor/temperature"]
    interval = "5s"
    method = "GET"
    data_format = "json"
    json_string_fields = ["temperature"]
    name_override = "sensor/fluorometer/emitor_temperature"

[[inputs.http]]
    urls = ["http://localhost:8089/sensor/fluorometer/detector/temperature"]
    interval = "5s"
    method = "GET"
    data_format = "json"
    json_string_fields = ["temperature"]
    name_override = "sensor/fluorometer/detector_temperature"
